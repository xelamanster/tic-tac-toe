<statements>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>92</id><start>1876</start><end>1924</end><line>61</line><description>scala.this.Predef.refArrayOps[String](winningResults).head.charAt(0).+(TicTacToe.winner)</description><symbolName>scala.Char.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>83</id><start>1803</start><end>1818</end><line>60</line><description>scala.this.Predef.augmentString(TicTacToe.x).*(3)</description><symbolName>scala.collection.immutable.StringLike.*</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>23</id><start>543</start><end>613</end><line>25</line><description>throw new scala.`package`.RuntimeException(scala.StringContext.apply(&quot;coordinate is outside board &quot;, &quot;&quot;).s(coordinate))</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Throw</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>nextPlayer</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>95</id><start>1963</start><end>1978</end><line>64</line><description>TicTacToe.this.lastPlayer.==(tictactoe.TicTacToe.x)</description><symbolName>java.lang.Object.==</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>77</id><start>1646</start><end>1664</end><line>56</line><description>bottomTopCollector[String](a, i)</description><symbolName>tictactoe.TicTacToe.bottomTopCollector</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>86</id><start>1754</start><end>1819</end><line>60</line><description>scala.this.Predef.refArrayOps[String](results).filter(((f: String) =&gt; f.==(scala.this.Predef.augmentString(TicTacToe.o).*(3)).||(f.==(scala.this.Predef.augmentString(TicTacToe.x).*(3)))))</description><symbolName>scala.collection.TraversableLike.filter</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>topBottomCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>50</id><start>1199</start><end>1218</end><line>46</line><description>a.apply(scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).indexOf[Array[_ &gt;: String with A]](a))</description><symbolName>scala.Array.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>59</id><start>1469</start><end>1477</end><line>50</line><description>pf.apply(a, i)</description><symbolName>scala.Function2.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>41</id><start>924</start><end>949</end><line>39</line><description>TicTacToe.this.checkWinner(TicTacToe.this.checkResults)</description><symbolName>tictactoe.TicTacToe.checkWinner</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>32</id><start>741</start><end>771</end><line>34</line><description>TicTacToe.this.board.apply(arrayY).apply(arrayX).!=(tictactoe.TicTacToe.empty)</description><symbolName>java.lang.Object.!=</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>68</id><start>1542</start><end>1575</end><line>54</line><description>collectResults({
  ((a: Array[String], i: Int) =&gt; verticalCollector[String](a, i))
})</description><symbolName>tictactoe.TicTacToe.collectResults</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>bottomTopCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>53</id><start>1297</start><end>1313</end><line>47</line><description>scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).indexOf[Array[_ &gt;: String with A]](a)</description><symbolName>scala.collection.GenSeqLike.indexOf</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>62</id><start>1430</start><end>1478</end><line>50</line><description>scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).collect[String, Array[String]](({
  @SerialVersionUID(value = 0) final &lt;synthetic&gt; class $anonfun extends scala.runtime.AbstractPartialFunction[Array[String],String] with Serializable {
    def &lt;init&gt;(): &lt;$anon: Array[String] =&gt; String&gt; = {
      $anonfun.super.&lt;init&gt;();
      ()
    };
    final override def applyOrElse[A1 &lt;: Array[String], B1 &gt;: String](x2: A1, default: A1 =&gt; B1): B1 = ((x2.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; pf.apply(a, i)
      case (defaultCase$ @ _) =&gt; default.apply(x2)
    };
    final def isDefinedAt(x2: Array[String]): Boolean = ((x2.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; true
      case (defaultCase$ @ _) =&gt; false
    }
  };
  new $anonfun()
}: PartialFunction[Array[String],String]))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))</description><symbolName>scala.collection.TraversableLike.collect</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>35</id><start>858</start><end>868</end><line>35</line><description>TicTacToe.this.nextPlayer</description><symbolName>tictactoe.TicTacToe.nextPlayer</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>44</id><start>1064</start><end>1077</end><line>43</line><description>scala.this.Predef.refArrayOps[String](a).reduce[String](((x$1: String, x$2: String) =&gt; x$1.+(x$2)))</description><symbolName>scala.collection.TraversableOnce.reduce</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>8</id><start>334</start><end>339</end><line>19</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>17</id><start>407</start><end>412</end><line>21</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>26</id><start>505</start><end>505</end><line>25</line><description>()</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>80</id><start>1621</start><end>1621</end><line>55</line><description>scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.canBuildFrom</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>89</id><start>1852</start><end>1870</end><line>61</line><description>TicTacToe.noWinner</description><symbolName>tictactoe.TicTacToe.noWinner</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>nextPlayer</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>98</id><start>1987</start><end>1988</end><line>64</line><description>tictactoe.TicTacToe.x</description><symbolName>tictactoe.TicTacToe.x</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>71</id><start>1514</start><end>1575</end><line>53</line><description>scala.this.Predef.refArrayOps[String](horizontalResults).++[String, Array[String]](scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; verticalCollector[String](a, i))
})))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))</description><symbolName>scala.collection.TraversableLike.++</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>11</id><start>360</start><end>365</end><line>20</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>74</id><start>1586</start><end>1620</end><line>55</line><description>scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; topBottomCollector[String](a, i))
}))</description><symbolName>scala.Predef.refArrayOps</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>56</id><start>1413</start><end>1414</end><line>50</line><description>0</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>38</id><start>889</start><end>899</end><line>36</line><description>TicTacToe.this.nextPlayer</description><symbolName>tictactoe.TicTacToe.nextPlayer</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>play</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>29</id><start>672</start><end>677</end><line>30</line><description>x.-(1)</description><symbolName>scala.Int.-</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>47</id><start>1025</start><end>1078</end><line>43</line><description>scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).collect[String, Array[String]](({
  @SerialVersionUID(value = 0) final &lt;synthetic&gt; class $anonfun extends scala.runtime.AbstractPartialFunction[Array[String],String] with Serializable {
    def &lt;init&gt;(): &lt;$anon: Array[String] =&gt; String&gt; = {
      $anonfun.super.&lt;init&gt;();
      ()
    };
    final override def applyOrElse[A1 &lt;: Array[String], B1 &gt;: String](x1: A1, default: A1 =&gt; B1): B1 = ((x1.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; scala.this.Predef.refArrayOps[String](a).reduce[String](((x$1: String, x$2: String) =&gt; x$1.+(x$2)))
      case (defaultCase$ @ _) =&gt; default.apply(x1)
    };
    final def isDefinedAt(x1: Array[String]): Boolean = ((x1.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; true
      case (defaultCase$ @ _) =&gt; false
    }
  };
  new $anonfun()
}: PartialFunction[Array[String],String]))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))</description><symbolName>scala.collection.TraversableLike.collect</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>20</id><start>522</start><end>523</end><line>25</line><description>1</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Object</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>2</id><start>182</start><end>190</end><line>9</line><description>&quot;Winner&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>65</id><start>1410</start><end>1410</end><line>50</line><description>immutable.this.IndexedSeq.canBuildFrom[String]</description><symbolName>scala.collection.immutable.IndexedSeq.canBuildFrom</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Object</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>5</id><start>238</start><end>241</end><line>13</line><description>&quot;o&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>14</id><start>354</start><end>380</end><line>20</line><description>scala.Array.apply[String](tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty)((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>46</id><start>1038</start><end>1038</end><line>43</line><description>scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.canBuildFrom</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>82</id><start>1779</start><end>1794</end><line>60</line><description>scala.this.Predef.augmentString(TicTacToe.o).*(3)</description><symbolName>scala.collection.immutable.StringLike.*</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>91</id><start>1908</start><end>1924</end><line>61</line><description>TicTacToe.winner</description><symbolName>tictactoe.TicTacToe.winner</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>bottomTopCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>55</id><start>1276</start><end>1314</end><line>47</line><description>a.apply(scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).size.-(1).-(scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).indexOf[Array[_ &gt;: String with A]](a)))</description><symbolName>scala.Array.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>64</id><start>1430</start><end>1490</end><line>50</line><description>scala.this.Predef.refArrayOps[String](scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).collect[String, Array[String]](({
  @SerialVersionUID(value = 0) final &lt;synthetic&gt; class $anonfun extends scala.runtime.AbstractPartialFunction[Array[String],String] with Serializable {
    def &lt;init&gt;(): &lt;$anon: Array[String] =&gt; String&gt; = {
      $anonfun.super.&lt;init&gt;();
      ()
    };
    final override def applyOrElse[A1 &lt;: Array[String], B1 &gt;: String](x2: A1, default: A1 =&gt; B1): B1 = ((x2.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; pf.apply(a, i)
      case (defaultCase$ @ _) =&gt; default.apply(x2)
    };
    final def isDefinedAt(x2: Array[String]): Boolean = ((x2.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; true
      case (defaultCase$ @ _) =&gt; false
    }
  };
  new $anonfun()
}: PartialFunction[Array[String],String]))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))).reduce[String](((x$3: String, x$4: String) =&gt; x$3.+(x$4)))</description><symbolName>scala.collection.TraversableOnce.reduce</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>73</id><start>1586</start><end>1620</end><line>55</line><description>collectResults({
  ((a: Array[String], i: Int) =&gt; topBottomCollector[String](a, i))
})</description><symbolName>tictactoe.TicTacToe.collectResults</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>58</id><start>1430</start><end>1435</end><line>50</line><description>TicTacToe.this.board</description><symbolName>tictactoe.TicTacToe.board</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>67</id><start>1557</start><end>1574</end><line>54</line><description>verticalCollector[String](a, i)</description><symbolName>tictactoe.TicTacToe.verticalCollector</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>85</id><start>1774</start><end>1818</end><line>60</line><description>f.==(scala.this.Predef.augmentString(TicTacToe.o).*(3)).||(f.==(scala.this.Predef.augmentString(TicTacToe.x).*(3)))</description><symbolName>scala.Boolean.||</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>nextPlayer</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>94</id><start>1977</start><end>1978</end><line>64</line><description>tictactoe.TicTacToe.x</description><symbolName>tictactoe.TicTacToe.x</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>topBottomCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>49</id><start>1201</start><end>1217</end><line>46</line><description>scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).indexOf[Array[_ &gt;: String with A]](a)</description><symbolName>scala.collection.GenSeqLike.indexOf</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>40</id><start>936</start><end>948</end><line>39</line><description>TicTacToe.this.checkResults</description><symbolName>tictactoe.TicTacToe.checkResults</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>13</id><start>374</start><end>379</end><line>20</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Object</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>4</id><start>223</start><end>226</end><line>12</line><description>&quot;x&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>22</id><start>509</start><end>541</end><line>25</line><description>coordinate.&lt;(1).||(coordinate.&gt;(3))</description><symbolName>scala.Boolean.||</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>31</id><start>766</start><end>771</end><line>34</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>76</id><start>1514</start><end>1620</end><line>54</line><description>scala.this.Predef.refArrayOps[String](scala.this.Predef.refArrayOps[String](horizontalResults).++[String, Array[String]](scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; verticalCollector[String](a, i))
})))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))).++[String, Array[String]](scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; topBottomCollector[String](a, i))
})))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))</description><symbolName>scala.collection.TraversableLike.++</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>16</id><start>400</start><end>405</end><line>21</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>nextPlayer</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>97</id><start>1980</start><end>1981</end><line>64</line><description>tictactoe.TicTacToe.o</description><symbolName>tictactoe.TicTacToe.o</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>7</id><start>327</start><end>332</end><line>19</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>79</id><start>1631</start><end>1665</end><line>56</line><description>scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; bottomTopCollector[String](a, i))
}))</description><symbolName>scala.Predef.refArrayOps</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>88</id><start>1852</start><end>1870</end><line>61</line><description>TicTacToe.noWinner</description><symbolName>tictactoe.TicTacToe.noWinner</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>70</id><start>1532</start><end>1532</end><line>53</line><description>scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.canBuildFrom</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>43</id><start>1073</start><end>1076</end><line>43</line><description>x$1.+(x$2)</description><symbolName>java.lang.String.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>bottomTopCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>52</id><start>1292</start><end>1293</end><line>47</line><description>1</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>25</id><start>505</start><end>505</end><line>25</line><description>()</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>34</id><start>773</start><end>821</end><line>34</line><description>throw new scala.`package`.RuntimeException(scala.StringContext.apply(&quot;&quot;, &quot; &quot;, &quot; is occupied&quot;).s(x, y))</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>61</id><start>1443</start><end>1443</end><line>50</line><description>scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.canBuildFrom</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>10</id><start>321</start><end>347</end><line>19</line><description>scala.Array.apply[String](tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty)((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>37</id><start>834</start><end>868</end><line>35</line><description>TicTacToe.this.board.apply(arrayY).update(arrayX, TicTacToe.this.nextPlayer)</description><symbolName>scala.Array.update</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Object</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>1</id><start>154</start><end>165</end><line>8</line><description>&quot;No Winner&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>28</id><start>639</start><end>651</end><line>28</line><description>checkAxis(y)</description><symbolName>tictactoe.TicTacToe.checkAxis</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>19</id><start>309</start><end>418</end><line>18</line><description>scala.Array.apply[Array[String]](scala.Array.apply[String](tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty)((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])), scala.Array.apply[String](tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty)((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])), scala.Array.apply[String](tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty)((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))((ClassTag.apply[Array[String]](ScalaRunTime.this.arrayClass(classOf[java.lang.String])): scala.reflect.ClassTag[Array[String]]))</description><symbolName>scala.Array.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>60</id><start>1443</start><end>1443</end><line>50</line><description>new $anonfun()</description><symbolName>tictactoe.TicTacToe.$anonfun.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>87</id><start>1828</start><end>1850</end><line>61</line><description>scala.this.Predef.refArrayOps[String](winningResults).isEmpty</description><symbolName>scala.collection.IndexedSeqOptimized.isEmpty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>nextPlayer</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>96</id><start>1980</start><end>1981</end><line>64</line><description>tictactoe.TicTacToe.o</description><symbolName>tictactoe.TicTacToe.o</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>69</id><start>1542</start><end>1575</end><line>54</line><description>scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; verticalCollector[String](a, i))
}))</description><symbolName>scala.Predef.refArrayOps</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>78</id><start>1631</start><end>1665</end><line>56</line><description>collectResults({
  ((a: Array[String], i: Int) =&gt; bottomTopCollector[String](a, i))
})</description><symbolName>tictactoe.TicTacToe.collectResults</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>nextPlayer</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>99</id><start>1987</start><end>1988</end><line>64</line><description>tictactoe.TicTacToe.x</description><symbolName>tictactoe.TicTacToe.x</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>63</id><start>1486</start><end>1489</end><line>50</line><description>x$3.+(x$4)</description><symbolName>java.lang.String.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>90</id><start>1903</start><end>1904</end><line>61</line><description>0</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>45</id><start>1038</start><end>1038</end><line>43</line><description>new $anonfun()</description><symbolName>tictactoe.TicTacToe.$anonfun.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>bottomTopCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>54</id><start>1278</start><end>1313</end><line>47</line><description>scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).size.-(1).-(scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).indexOf[Array[_ &gt;: String with A]](a))</description><symbolName>scala.Int.-</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>72</id><start>1601</start><end>1619</end><line>55</line><description>topBottomCollector[String](a, i)</description><symbolName>tictactoe.TicTacToe.topBottomCollector</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>81</id><start>1514</start><end>1665</end><line>55</line><description>scala.this.Predef.refArrayOps[String](scala.this.Predef.refArrayOps[String](scala.this.Predef.refArrayOps[String](horizontalResults).++[String, Array[String]](scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; verticalCollector[String](a, i))
})))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))).++[String, Array[String]](scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; topBottomCollector[String](a, i))
})))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))).++[String, Array[String]](scala.this.Predef.refArrayOps[String](collectResults({
  ((a: Array[String], i: Int) =&gt; bottomTopCollector[String](a, i))
})))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))</description><symbolName>scala.collection.TraversableLike.++</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>27</id><start>621</start><end>633</end><line>27</line><description>checkAxis(x)</description><symbolName>tictactoe.TicTacToe.checkAxis</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>36</id><start>834</start><end>868</end><line>35</line><description>TicTacToe.this.board.apply(arrayY).update(arrayX, TicTacToe.this.nextPlayer)</description><symbolName>scala.Array.update</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>9</id><start>341</start><end>346</end><line>19</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>18</id><start>387</start><end>413</end><line>21</line><description>scala.Array.apply[String](tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty, tictactoe.TicTacToe.empty)((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>verticalCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>48</id><start>1137</start><end>1141</end><line>45</line><description>a.apply(i)</description><symbolName>scala.Array.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>21</id><start>527</start><end>541</end><line>25</line><description>coordinate.&gt;(3)</description><symbolName>scala.Int.&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>57</id><start>1421</start><end>1422</end><line>50</line><description>3</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>12</id><start>367</start><end>372</end><line>20</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Object</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>3</id><start>208</start><end>211</end><line>11</line><description>&quot;-&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>84</id><start>1798</start><end>1818</end><line>60</line><description>f.==(scala.this.Predef.augmentString(TicTacToe.x).*(3))</description><symbolName>java.lang.Object.==</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkWinner</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>93</id><start>1876</start><end>1924</end><line>61</line><description>scala.this.Predef.refArrayOps[String](winningResults).head.charAt(0).+(TicTacToe.winner)</description><symbolName>scala.Char.+</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>75</id><start>1576</start><end>1576</end><line>54</line><description>scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.Array.canBuildFrom</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>play</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>30</id><start>696</start><end>701</end><line>31</line><description>y.-(1)</description><symbolName>scala.Int.-</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>39</id><start>876</start><end>899</end><line>36</line><description>TicTacToe.this.lastPlayer_=(TicTacToe.this.nextPlayer)</description><symbolName>tictactoe.TicTacToe.lastPlayer_=</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>collectResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>66</id><start>1404</start><end>1499</end><line>50</line><description>scala.this.Predef.intWrapper(0).until(3).map[String, scala.collection.immutable.IndexedSeq[String]](((i: Int) =&gt; scala.this.Predef.refArrayOps[String](scala.this.Predef.refArrayOps[Array[String]](TicTacToe.this.board).collect[String, Array[String]](({
  @SerialVersionUID(value = 0) final &lt;synthetic&gt; class $anonfun extends scala.runtime.AbstractPartialFunction[Array[String],String] with Serializable {
    def &lt;init&gt;(): &lt;$anon: Array[String] =&gt; String&gt; = {
      $anonfun.super.&lt;init&gt;();
      ()
    };
    final override def applyOrElse[A1 &lt;: Array[String], B1 &gt;: String](x2: A1, default: A1 =&gt; B1): B1 = ((x2.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; pf.apply(a, i)
      case (defaultCase$ @ _) =&gt; default.apply(x2)
    };
    final def isDefinedAt(x2: Array[String]): Boolean = ((x2.asInstanceOf[Array[String]]: Array[String]): Array[String] @unchecked) match {
      case (a @ (_: Array[String])) =&gt; true
      case (defaultCase$ @ _) =&gt; false
    }
  };
  new $anonfun()
}: PartialFunction[Array[String],String]))(scala.this.Array.canBuildFrom[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String])))).reduce[String](((x$3: String, x$4: String) =&gt; x$3.+(x$4)))))(immutable.this.IndexedSeq.canBuildFrom[String]).toArray[String]((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]))</description><symbolName>scala.collection.TraversableOnce.toArray</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>15</id><start>393</start><end>398</end><line>21</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkResults</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>42</id><start>1025</start><end>1030</end><line>43</line><description>TicTacToe.this.board</description><symbolName>tictactoe.TicTacToe.board</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>bottomTopCollector</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>51</id><start>1279</start><end>1284</end><line>47</line><description>TicTacToe.this.board</description><symbolName>tictactoe.TicTacToe.board</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>setBox</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>33</id><start>773</start><end>821</end><line>34</line><description>throw new scala.`package`.RuntimeException(scala.StringContext.apply(&quot;&quot;, &quot; &quot;, &quot; is occupied&quot;).s(x, y))</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Throw</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>checkAxis</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>24</id><start>543</start><end>613</end><line>25</line><description>throw new scala.`package`.RuntimeException(scala.StringContext.apply(&quot;coordinate is outside board &quot;, &quot;&quot;).s(coordinate))</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</source><package>tictactoe</package><class>TicTacToe</class><classType>Class</classType><topLevelClass>TicTacToe</topLevelClass><method>&lt;none&gt;</method><path>D:\STUD\TestProjects\TDD\src\main\scala\tictactoe\TicTacToe.scala</path><id>6</id><start>288</start><end>293</end><line>17</line><description>tictactoe.TicTacToe.empty</description><symbolName>tictactoe.TicTacToe.empty</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
</statements>